%!PS-Adobe-2.0 EPSF-2.0
%%Creator: gnuplot-3.5+ (modified by M.Yamaga)
%%DocumentFonts: Helvetica
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 200 dict def
gnudict begin
/Color false def
/Solid false def
/gnuframelinewidth 5.000 def
/gnulinewidth 5.000 def
/ns 240 def
/ss 171 def
/vshift -80 def
/upshift 17 def
/downshift 34 def
/dl {10 mul} def
/hpt 63.0 def
/vpt 63.0 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/CT { Color {}{pop pop pop 0 0 0 } ifelse setrgbcolor} def
/DL { Solid {pop []} if 0 setdash } def
/BL { stroke gnuframelinewidth 2 mul setlinewidth } def
/AL { stroke gnuframelinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 setdash 0 0 0 setrgbcolor } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/Green   { 0   1   0   CT } def
/Blue    { 0   0   1   CT } def
/Red     { 1   0   0   CT } def
/Purple  { 1   0   1   CT } def
/Skyblue { 0   1   1   CT } def
/Yellow  { 1   1   0   CT } def
/Black   { 0   0   0   CT } def
/Orange  { 1   0.3 0   CT } def
/Gray    { 0.5 0.5 0.5 CT } def
/Grey    { 0.5 0.5 0.5 CT } def
/DL0 { PL [] DL } def
/DL1 { PL [] DL } def
/DL2 { PL [4 dl 2 dl] DL } def
/DL3 { PL [2 dl 3 dl] DL } def
/DL4 { PL [1 dl 1.5 dl] DL } def
/DL5 { PL [5 dl 2 dl 1 dl 2 dl] DL } def
/DL6 { PL [4 dl 3 dl 1 dl 3 dl] DL } def
/DL7 { PL [2 dl 2 dl 2 dl 4 dl] DL } def
/DL8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] DL } def
/DL9 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] DL } def
%%%% default line style
/LTA { DL0 Black   } def %%%% for arrow line
/LT1 { DL1 Green   } def
/LT2 { DL2 Blue    } def
/LT3 { DL3 Red     } def
/LT4 { DL4 Purple  } def
/LT5 { DL5 Skyblue } def
/LT6 { DL6 Yellow  } def
/LT7 { DL7 Black   } def
/LT8 { DL8 Orange  } def
/LT9 { DL9 Gray    } def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub M
  0 currentlinewidth V stroke } def
/Diamond { stroke [] 0 setdash vpt add moveto
  hpt neg vpt neg rlineto  hpt vpt neg rlineto
  hpt vpt rlineto  hpt neg vpt rlineto  closepath } def
/Box { stroke [] 0 setdash
  /vpt1 vpt  0.8 mul def /hpt1 hpt  0.8 mul def
  /vpt2 vpt1 2   mul def /hpt2 hpt1 2   mul def
  exch hpt1 sub exch vpt1 add moveto
  0 vpt2 neg rlineto  hpt2 0 rlineto  0 vpt2 rlineto
  hpt2 neg 0 rlineto  closepath } def
/Triangle { stroke [] 0 setdash vpt 1.12 mul add moveto
  hpt neg vpt -1.62 mul rlineto hpt 2 mul 0 rlineto
  hpt neg vpt 1.62 mul rlineto closepath } def
/Circle { stroke [] 0 setdash vpt 0 360 arc } def
/white { gsave 1 setgray fill grestore stroke } def
/gray  { gsave   setgray fill grestore stroke } def
/smaller { /vpt vpt 2 div def /hpt hpt 2 div def } def
/larger  { /vpt vpt 2 mul def /hpt hpt 2 mul def } def
/wDiamond { Diamond white  } def
/bDiamond { Diamond fill   } def
/eDiamond { Diamond stroke } def
/dDiamond { 2 copy wDiamond smaller wDiamond larger } def
/wBox { Box white  } def
/bBox { Box fill   } def
/eBox { Box stroke } def
/dBox { 2 copy wBox smaller wBox larger } def
/wTriangle { Triangle white  } def
/bTriangle { Triangle fill   } def
/eTriangle { Triangle stroke } def
/dTriangle { 2 copy wTriangle smaller wTriangle larger } def
/wCircle { Circle white  } def
/bCircle { Circle fill   } def
/eCircle { Circle stroke } def
/dCircle { 2 copy wCircle smaller wCircle larger } def
%%%% default point style
/PT1 {wDiamond } def
/PT2 {bDiamond } def
/PT3 {wBox     } def
/PT4 {bBox     } def
/PT5 {wTriangle} def
/PT6 {bTriangle} def
/PT7 {wCircle  } def
/PT8 {bCircle  } def
/PT9 {dCircle  } def
/ArWid gnulinewidth 2 div def
/HLen 100 def %%%% length of arrow-head
/HWid  50 def %%%%  width of arrow-wing
/Arrow {stroke [] 0 setdash
 2 copy 6 2 roll exch 3 1 roll sub 3 1 roll sub 2 copy
 2 exp exch 2 exp add sqrt 3 1 roll atan 4 -2 roll moveto gsave
 currentpoint translate rotate drawArrow grestore } def
/drawArrow {dup 0 0 moveto 0 ArWid rlineto
HLen 2 mul 3 div sub 0 rlineto HLen -3 div HWid ArWid sub rlineto
HLen HWid neg rlineto HLen neg HWid neg rlineto
HLen  3 div HWid ArWid sub rlineto HLen 2 mul 3 div sub neg 0 rlineto
closepath 5.0 setlinewidth fill} def
/vectorsize 0.5 def  %%%% vector size
/large 1.1 def
/small 0.9 def
/huge  1.5 def
/tiny  0.6 def
/stringheight { gsave newpath 0 0 moveto
 false charpath pathbbox 4 2 roll pop pop
 dup abs 1 lt {pop 1.1 mul}{exch pop} ifelse
 newpath grestore } def
/stringdepth  { gsave newpath 0 0 moveto
 false charpath pathbbox 4 -1 roll pop pop pop neg
 newpath grestore } def
/selectfont { exch findfont exch
 dup type /arraytype eq {makefont}{scalefont} ifelse setfont
} bind def
/o {dup dup /ar matrix def
 ar 0 3 -1 roll put ar 3 3 -1 roll put
 10 sin 10 cos div mul ar 2 3 -1 roll put ar} def
/v {dup /ar matrix def
 ar 0 3 -1 roll put ar 3 3 -1 roll 2.5 mul put ar} def
/size {ns mul 140 div} def
/Lsize {large mul} def /Ssize {small mul} def
/Hsize {huge  mul} def /Tsize {tiny  mul} def
/Vs {vectorsize mul} def
/init0 {/strlen 0 def /Lup 0 def /Ldown 0 def} def
/init  {init0 /nfrac 0 def /numearray 11 array def /denoarray 11 array def} def
/strwidth {selectfont stringwidth pop} def
/upordown {Lup Ldown ge {Lup}{Ldown} ifelse} def
/nln {strwidth strlen add /strlen exch def
 /strlen strlen upordown add def /Lup 0 def /Ldown 0 def} def
/uln {strwidth Lup   add /Lup   exch def} def
/dln {strwidth Ldown add /Ldown exch def} def
/fracstartln { /strlenorg  strlen upordown add def init0
 /nfrac nfrac 1 add def} def
/fracmidln   { /strlennume strlen upordown add def init0
 numearray nfrac strlennume put} def
/fracendln   { /strlendeno strlen upordown add def init0
 denoarray nfrac strlendeno put
 strlennume strlendeno ge {strlennume}{strlendeno} ifelse strlenorg add
 /strlen exch def } def
/cpx {currentpoint      pop} def
/cpy {currentpoint exch pop} def
/n {xup xdown ge {xup}{xdown} ifelse baseline moveto
 selectfont dup show dup length dup 0 gt
{1 sub 1 getinterval /str exch def
/d-shift str stringdepth dup downshift lt {pop downshift}if def
/u-shift str stringheight ss 3 div sub dup upshift lt {pop upshift}if def}
{pop pop /d-shift (\275) stringdepth def
/u-shift (\275) stringheight 0.9 mul def
} ifelse /xup cpx def /xdown cpx def} def
/n2 {xup xdown ge {xup}{xdown} ifelse baseline moveto
 selectfont dup show /str exch def
/d-shift str stringdepth dup downshift lt {pop downshift}if def
/u-shift str stringheight ss 3 div sub dup upshift lt {pop upshift}if def
/xup cpx def /xdown cpx def} def
/u {xup baseline u-shift add moveto
 selectfont show /xup cpx def } def
/uu {xup baseline u-shift add upshift add moveto
 selectfont show /xup cpx def } def
/ud {xup baseline u-shift add downshift 2 div sub moveto
 selectfont show /xup cpx def } def
/d {xdown baseline d-shift sub moveto
 selectfont show /xdown cpx def } def
/du {xdown baseline d-shift sub upshift add moveto
 selectfont show /xdown cpx def } def
/dd {xdown baseline d-shift sub downshift 2 div sub moveto
 selectfont show /xdown cpx def } def
/initshow {/u-shift upshift def /d-shift downshift def
 /xup cpx def /xdown cpx def /baseline cpy def} def
/numeheight {/Symbol ns selectfont (½) dup
 stringheight exch stringdepth add 2 div} def
/denodepth numeheight def
/fracstart{/baselineorg baseline def /nfrac nfrac 1 add def
 xup xdown ge {xup}{xdown} ifelse baseline moveto /fracstartx cpx def
 /strlennume numearray nfrac get def /strlendeno denoarray nfrac get def
 strlennume strlendeno ge {strlennume}{strlendeno} ifelse 2 div
 strlennume 2 div sub numeheight rmoveto initshow} def
/fracmid{xup xdown ge {xup}{xdown} ifelse /numex exch def
 fracstartx baselineorg moveto
 strlennume strlendeno ge {strlennume}{strlendeno} ifelse 2 div
 strlendeno 2 div sub denodepth neg rmoveto initshow} def
/fracend{xup xdown ge {xup}{xdown} ifelse /denox exch def
 gsave numex denox ge {numex}{denox} ifelse dup
 baselineorg numeheight 2 div add dup
 3 1 roll stroke moveto fracstartx exch lineto
 5.0 setlinewidth [] 0 setdash stroke grestore
 baselineorg moveto initshow} def
/Left { currentpoint stroke moveto
  0 ns -3 div rmoveto initshow /nfrac 0 def} def
/Right { currentpoint stroke moveto
  /strlen strlen upordown add def
  strlen neg ns -3 div rmoveto initshow /nfrac 0 def} def
/Center { currentpoint stroke moveto
  /strlen strlen upordown add def
  strlen -2 div ns -3 div rmoveto initshow /nfrac 0 def} def
/head
{ gsave dup stringwidth pop -2 div exch stringheight 1.1 mul rmoveto
  selectfont dup dup stringwidth pop -2 div exch stringdepth
  rmoveto show grestore } def
/startline {dup 0 eq{pop /OLH (\275) stringheight 0.8 mul cpy add def
/OLstart cpx def /OL 1 def }{1 eq{/ULH (\275) stringdepth cpy exch sub def
/ULstart cpx def /UL 1 def }{/SLH (\326) stringheight cpy add def
/SLstart cpx def /SL 1 def }ifelse} ifelse } def
/endline{dup 0 eq{pop OLstart OLH drawline}{1 eq{ULstart ULH drawline}
{SLstart SLH drawline}ifelse}ifelse} def
/drawline {dup gsave cpx stroke exch moveto lineto [] 0 setdash
 5.0 setlinewidth stroke grestore} def
/ch-image {ch-data 0 get} bind def
/ch-width {ch-data 1 get} bind def
/ch-height {ch-data 2 get} bind def
/ch-xoff {ch-data 3 get} bind def
/ch-yoff {ch-data 4 get} bind def
/ch-tfmw {ch-data 5 get} bind def
/CharBuilder {
/ch-code exch def
/font-dict exch def
/ch-data font-dict /BitMaps get ch-code get def
ch-data null eq not {
ch-tfmw 0
ch-xoff neg  ch-yoff neg ch-width ch-xoff sub ch-height ch-yoff sub
setcachedevice
ch-width ch-height true [1 0  0 1  ch-xoff ch-yoff]
{ch-image} imagemask
} if
} bind def
/s3 3 string def
/D {
/ch-code exch def
/ch-data exch def
currentfont /BitMaps get ch-code ch-data put
currentfont /Encoding get ch-code
dup s3 cvs cvn put
} bind def
/fsize 105 def
/corr 0.014 def
/NewSymbol 7 dict def
/NewSymbol load begin
/FontType 3 def
/FontMatrix [corr 0 0 corr 0 0] def
/FontBBox [0 0 1 1] def
/BitMaps fsize array def
/BuildChar /CharBuilder load def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
end
/NewSymbol /NewSymbol load definefont pop
NewSymbol setfont
[<7000001F8000F800007FE000FC0000F87000FC0001F03800FC0001F01C00FE0001F00C00FE0001F00E007E0001F807007E00
  01F803007F0001F803007F0001FC03803F0000FC01803F0000FE01803F80007E00003F80007E00001F80007F00001F80003F
  00001FC0003F00001FC0003F80000FC0001F80000FC0001F80000FE0001F80000FE0001FC00007E0000FC00007E0000FC000
  07F0000FC00007F0000FE00003F80007E00003FC0007E00003FC0007E00003FE0007C00001FF0007C00001FB800FC00001FD
  E00F800001FC781F000000FC1FFE000000FC07F0000000FE0000000000FE00000000007E00000000007E00000000007F0000
  0000007F00000000003F00000000003F00000000003F80000000003F80000000FFFFFFFF0000FFFFFFFF0000000FC0000000
  001FC0000000000FC0000000000FC0000000000FE0000000000FE0000000000FE000000003FFE000000003FFF000000003FF
 F00000000007F0000000> 48 60 -5 0 49.603] 104 D
[<001FC00000FFF80003E03E0007C007800F8001801F0000003E0000007E0000007E000000FC000000FC000000FC000000FC00
  0000FC000000FC000000FC000000FC000000FE000000FE000000FFFFFC00FFFFFE00FFFFFE007F0000007F0000007F800000
  3F8000003F8000001FC000000FE0000007E0000003F0000001FC000000FE0000003F8000000FFFE00003FFE000007FE0> 32 37 -5 0 34.945] 15 D
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Helvetica findfont 240 scalefont setfont
newpath
LTa
1440 601 M
5409 0 V
-5409 0 R
0 4318 V
LTb
LTa
1440 601 M
5409 0 V
LTb
1440 601 M
63 0 V
5346 0 R
-63 0 V
-5490 0 R
(0) Rshow
LTa
1440 2040 M
5409 0 V
LTb
1440 2040 M
63 0 V
5346 0 R
-63 0 V
-5490 0 R
(5) Rshow
LTa
1440 3480 M
5409 0 V
LTb
1440 3480 M
63 0 V
5346 0 R
-63 0 V
-5490 0 R
(10) Rshow
LTa
1440 4919 M
5409 0 V
LTb
1440 4919 M
63 0 V
5346 0 R
-63 0 V
-5490 0 R
(15) Rshow
LTa
1548 601 M
0 4318 V
LTb
1548 601 M
0 63 V
0 4255 R
0 -63 V
LTa
1710 601 M
0 4318 V
LTb
1710 601 M
0 63 V
0 4255 R
0 -63 V
0 -4495 R
(1/200) Cshow
LTa
1891 601 M
0 4318 V
LTb
1891 601 M
0 63 V
0 4255 R
0 -63 V
LTa
2342 601 M
0 4318 V
LTb
2342 601 M
0 63 V
0 4255 R
0 -63 V
0 -4495 R
(1/60) Cshow
LTa
2642 601 M
0 4318 V
LTb
2642 601 M
0 63 V
0 4255 R
0 -63 V
LTa
3243 601 M
0 4318 V
LTb
3243 601 M
0 63 V
0 4255 R
0 -63 V
0 -4495 R
(1/30) Cshow
LTa
4145 601 M
0 4318 V
LTb
4145 601 M
0 63 V
0 4255 R
0 -63 V
0 -4495 R
(1/20) Cshow
LTa
5046 601 M
0 4318 V
LTb
5046 601 M
0 63 V
0 4255 R
0 -63 V
0 -4495 R
(1/15) Cshow
LTa
6849 601 M
0 4318 V
LTb
6849 601 M
0 63 V
0 4255 R
0 -63 V
0 -4495 R
(1/10) Cshow
1440 601 M
5409 0 V
0 4318 V
-5409 0 V
0 -4318 V
240 2760 M
currentpoint gsave translate 90 rotate 0 0 M
gsave
init
(ÂÑÎÏ) /GothicBBB-Medium-EUC-H ns nln
(\(ton\)) /Helvetica ns nln
Center
(ÂÑÎÏ) /GothicBBB-Medium-EUC-H ns n2
(\(ton\)) /Helvetica ns n
grestore
grestore
4144 121 M
gsave
init
(ÁØ´ÖÊÑ·Á³Ñ) /GothicBBB-Medium-EUC-H ns nln
(\(rad\)) /Helvetica ns nln
Center
(ÁØ´ÖÊÑ·Á³Ñ) /GothicBBB-Medium-EUC-H ns n2
(\(rad\)) /Helvetica ns n
grestore
LTA
LT1
6066 4616 M
gsave
init
(ÊÉÎÌ¤«¤é»»Äê) /GothicBBB-Medium-EUC-H ns nln
Right
(ÊÉÎÌ¤«¤é»»Äê) /GothicBBB-Medium-EUC-H ns n2
grestore
6210 4616 M
432 0 V
1440 601 M
270 362 V
181 179 V
451 158 V
4507 930 V
LT2
6066 4376 M
gsave
init
(¼Â¸³·ë²Ì) /GothicBBB-Medium-EUC-H ns nln
Right
(¼Â¸³·ë²Ì) /GothicBBB-Medium-EUC-H ns n2
grestore
6210 4376 M
432 0 V
1440 774 M
18 -3 V
6 63 V
11 55 V
6 75 V
0 69 V
18 72 V
12 75 V
5 -32 V
-11 -9 V
0 43 V
6 58 V
11 58 V
12 54 V
0 58 V
6 60 V
6 -54 V
0 -101 V
-12 -141 V
-12 -141 V
0 -144 V
1499 745 L
6 150 V
17 141 V
6 146 V
6 147 V
18 136 V
0 60 V
0 58 V
11 57 V
12 -43 V
-23 -9 V
6 52 V
5 55 V
6 57 V
6 61 V
12 60 V
12 55 V
-6 58 V
12 57 V
41 -66 V
0 130 V
6 48 V
64 -48 V
-17 -9 V
23 60 V
12 58 V
18 52 V
29 63 V
29 55 V
36 63 V
23 -98 V
12 98 V
-6 -32 V
29 84 V
36 57 V
35 55 V
41 66 V
30 49 V
11 12 V
47 52 V
47 63 V
41 49 V
47 -138 V
2075 1056 L
70 547 V
1887 728 L
1723 601 L
-26 0 R
31 164 V
47 127 V
41 144 V
65 144 V
1716 630 L
118 414 V
35 147 V
53 133 V
53 143 V
53 144 V
23 141 V
42 147 V
35 141 V
29 156 V
24 126 V
47 159 V
23 144 V
41 141 V
42 77 V
23 67 V
18 63 V
29 -112 V
6 -9 V
-6 -78 V
-11 -167 V
-12 -351 V
-12 -224 V
-47 -282 V
-41 -288 V
-65 -288 V
2093 892 L
1969 745 L
1875 641 L
-23 18 V
11 89 V
36 144 V
47 126 V
6 6 V
64 156 V
65 146 V
41 141 V
41 139 V
12 -3 V
23 161 V
41 135 V
30 144 V
29 150 V
36 141 V
17 138 V
12 17 V
18 133 V
23 147 V
36 141 V
23 -69 V
12 86 V
6 49 V
18 81 V
52 74 V
41 75 V
36 61 V
82 74 V
41 -71 V
53 141 V
100 72 V
112 80 V
123 58 V
165 66 V
47 -121 V
0 -104 V
11 -285 V
0 -285 V
6 -287 V
-12 -285 V
-29 -271 V
-47 -302 V
-41 -291 V
3133 1174 L
2980 895 L
2839 748 L
2686 673 L
stroke
grestore
end
showpage
%%Trailer
