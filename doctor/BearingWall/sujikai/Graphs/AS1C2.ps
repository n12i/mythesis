%!PS-Adobe-2.0 EPSF-2.0
%%Title: Graphs/AS1C2.ps
%%Creator: gnuplot 3.7 patchlevel 0 (+1.1.8 1998/01/27)
%%CreationDate: Tue Mar 30 18:38:10 1999
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -66 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/UL { gnulinewidth mul /userlinewidth exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/makecompfont {
15 dict begin
 findfont /kanjifont exch def
 findfont /asciifont exch def
 /FontType 0 def
 /WMode 0 def
 /FMapType 3 def
 /FontMatrix matrix def
 /Encoding [0 1] def
 /FDepVector
 [asciifont 1 scalefont
  kanjifont 1 scalefont] def
 dup /FontName exch def
 currentdict
end
definefont pop
} def
/Helvetica-Ryumin /Helvetica /Ryumin-Light-H makecompfont
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica-Ryumin) findfont 200 scalefont setfont
1.000 UL
LTb
900 600 M
63 0 V
5897 0 R
-63 0 V
780 600 M
(0) Rshow
900 1200 M
63 0 V
5897 0 R
-63 0 V
-6017 0 R
(100) Rshow
900 1800 M
63 0 V
5897 0 R
-63 0 V
-6017 0 R
(200) Rshow
900 2400 M
63 0 V
5897 0 R
-63 0 V
-6017 0 R
(300) Rshow
900 3000 M
63 0 V
5897 0 R
-63 0 V
-6017 0 R
(400) Rshow
900 3600 M
63 0 V
5897 0 R
-63 0 V
-6017 0 R
(500) Rshow
900 4200 M
63 0 V
5897 0 R
-63 0 V
-6017 0 R
(600) Rshow
900 4800 M
63 0 V
5897 0 R
-63 0 V
-6017 0 R
(700) Rshow
900 600 M
0 63 V
0 4137 R
0 -63 V
900 400 M
(0) Cshow
1751 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
(0.01) Cshow
2603 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
(0.02) Cshow
3454 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
(0.03) Cshow
4306 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
(0.04) Cshow
5157 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
(0.05) Cshow
6009 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
(0.06) Cshow
6860 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
(0.07) Cshow
1.000 UL
LTa
900 600 M
5960 0 V
1.000 UL
LTa
900 600 M
0 4200 V
1.000 UL
LTb
900 600 M
5960 0 V
0 4200 V
-5960 0 V
900 600 L
200 2700 M
currentpoint gsave translate 90 rotate 0 0 M
(load \(kgf\)) Cshow
grestore
3880 100 M
(story deformation angle \(rad\)) Cshow
1.000 UL
LT0
5957 4637 M
(AS1C2) Rshow
6077 4637 M
543 0 V
945 714 M
123 192 V
144 186 V
44 120 V
144 108 V
106 192 V
17 -24 V
-31 -186 V
-24 -96 V
-41 -174 V
1372 888 L
1278 768 L
1222 660 L
-54 -54 V
-4 6 V
125 300 V
111 300 V
120 306 V
140 276 V
61 66 V
81 126 V
49 54 V
37 60 V
48 66 V
54 60 V
44 54 V
56 60 V
56 54 V
14 -138 V
-33 -180 V
-62 -234 V
1928 1386 L
-72 -204 V
1771 996 L
-50 -96 V
-49 -48 V
1546 762 L
-37 -48 V
-55 -54 V
-51 -30 V
-21 -18 V
0 24 V
123 264 V
178 306 V
143 300 V
124 300 V
121 294 V
57 132 V
38 72 V
51 96 V
81 114 V
64 72 V
67 54 V
79 60 V
81 60 V
91 60 V
91 60 V
88 60 V
96 54 V
112 66 V
101 54 V
88 60 V
36 24 V
58 30 V
49 30 V
93 42 V
11 -48 V
2 -126 V
-31 -144 V
-20 -84 V
-58 -222 V
-85 -294 V
-96 -294 V
-99 -270 V
2975 1500 L
2806 1194 L
-95 -120 V
2614 966 L
2509 906 L
2330 810 L
2184 714 L
-96 -48 V
-61 -60 V
-19 36 V
125 264 V
82 48 V
145 132 V
78 120 V
75 120 V
119 180 V
111 174 V
70 132 V
75 108 V
64 120 V
63 132 V
119 234 V
73 150 V
74 150 V
58 126 V
91 168 V
98 186 V
37 54 V
54 66 V
76 54 V
79 60 V
99 66 V
80 48 V
79 54 V
46 24 V
77 48 V
85 54 V
54 48 V
27 18 V
89 60 V
85 60 V
61 -24 V
43 30 V
69 54 V
82 48 V
30 18 V
98 48 V
110 -12 V
108 72 V
90 48 V
20 -18 V
69 30 V
166 66 V
95 18 V
17 -42 V
30 -18 V
46 -30 V
50 -18 V
53 -228 V
34 -42 V
45 -42 V
27 -384 V
28 -24 V
103 18 V
69 -6 V
139 0 V
147 -66 V
17 -6 V
182 -72 V
28 -18 V
111 -150 V
53 -60 V
-1 -210 V
1 -6 V
-54 -210 V
-83 -270 V
-81 -210 V
-18 -42 V
-38 -84 V
6298 1788 L
6079 1506 L
5951 1374 L
5588 1200 L
5378 1086 L
5016 906 L
4665 786 L
4369 720 L
3982 666 L
3787 600 L
-20 18 V
2.000 UL
LT0
5957 4437 M
(Envelope) Rshow
6077 4437 M
543 0 V
900 606 M
45 108 V
123 192 V
144 186 V
44 120 V
144 108 V
106 192 V
14 6 V
140 276 V
61 66 V
81 126 V
49 54 V
37 60 V
48 66 V
54 60 V
44 54 V
56 60 V
56 54 V
71 6 V
81 114 V
64 72 V
67 54 V
79 60 V
81 60 V
91 60 V
91 60 V
88 60 V
96 54 V
112 66 V
101 54 V
88 60 V
36 24 V
58 30 V
49 30 V
93 42 V
127 6 V
76 54 V
79 60 V
99 66 V
80 48 V
79 54 V
46 24 V
77 48 V
85 54 V
54 48 V
27 18 V
89 60 V
85 60 V
104 6 V
69 54 V
82 48 V
30 18 V
98 48 V
218 60 V
90 48 V
89 12 V
166 66 V
95 18 V
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica-Ryumin
