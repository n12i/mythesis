%!PS-Adobe-2.0 EPSF-2.0
%%Title: envelope.eps
%%Creator: gnuplot 3.7 patchlevel 0 (+1.1.8 1998/01/27)
%%CreationDate: Sat Mar 13 22:07:05 1999
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 300 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -66 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/setfontparam {exch /df exch def
 dup dup dup dup
 /ns exch def
 /ss exch 0.7 mul def
 /vshift exch -3 div def
 /upshift exch 14 div def
 /downshift exch 7 div def
} def
/Helvetica 200 setfontparam
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/UL { gnulinewidth mul /userlinewidth exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/makecompfont {
15 dict begin
 findfont /kanjifont exch def
 findfont /asciifont exch def
 /FontType 0 def
 /WMode 0 def
 /FMapType 3 def
 /FontMatrix matrix def
 /Encoding [0 1] def
 /FDepVector
 [asciifont 1 scalefont
  kanjifont 1 scalefont] def
 dup /FontName exch def
 currentdict
end
definefont pop
} def
/Helvetica-Gothic /Helvetica /GothicBBB-Medium-H makecompfont
/CT { Color {}{pop pop pop 0 0 0 } ifelse setrgbcolor} def
/Green   { 0   1   0   CT } def
/Blue    { 0   0   1   CT } def
/Red     { 1   0   0   CT } def
/Purple  { 1   0   1   CT } def
/Skyblue { 0   1   1   CT } def
/Yellow  { 1   1   0   CT } def
/Black   { 0   0   0   CT } def
/Orange  { 1   0.3 0   CT } def
/Gray    { 0.5 0.5 0.5 CT } def
/Grey    { 0.5 0.5 0.5 CT } def
/HLen 100 def %%%% length of arrow-head
/HWid  50 def %%%%  width of arrow-wing
/Arrow {stroke [] 0 setdash
 /ArWid currentlinewidth 2 div def
 2 copy 6 2 roll exch 3 1 roll sub 3 1 roll sub 2 copy
 2 exp exch 2 exp add sqrt 3 1 roll atan 4 -2 roll moveto gsave
 currentpoint translate rotate drawArrow grestore } def
/drawArrow {dup 0 0 moveto 0 ArWid rlineto
HLen 2 mul 3 div sub 0 rlineto HLen -3 div HWid ArWid sub rlineto
HLen HWid neg rlineto HLen neg HWid neg rlineto
HLen  3 div HWid ArWid sub rlineto HLen 2 mul 3 div sub neg 0 rlineto
closepath fill} def
/rm /Times-Roman def
/it /Times-Italic def
/tt /Courier def
/sf /Helvetica def
/bit /Times-BoldItalic def
/brm /Times-Bold def
/btt /Courier-Bold def
/bsf /Helvetica-Bold def
/sm /Symbol def
/nsm /NewSymbol def
/mincho /Ryumin-Light-H def
/gothic /GothicBBB-Medium-H def
/vectorsize 0.5 def  %%%% vector size
/stringheight { gsave newpath 0 0 moveto
 false charpath pathbbox 4 2 roll pop pop
 dup abs 1 lt {pop 1.1 mul}{exch pop} ifelse
 newpath grestore } def
/stringdepth  { gsave newpath 0 0 moveto
 false charpath pathbbox 4 -1 roll pop pop pop neg
 newpath grestore } def
/selectfont { exch findfont exch
 dup type /arraytype eq {makefont}{scalefont} ifelse setfont
} bind def
/o {dup dup /ar matrix def
 ar 0 3 -1 roll put ar 3 3 -1 roll put
 10 sin 10 cos div mul ar 2 3 -1 roll put ar} def
/v {dup /ar matrix def
 ar 0 3 -1 roll put ar 3 3 -1 roll 2.5 mul put ar} def
/size {ns mul 140 div} def
/Vs {vectorsize mul} def
/init0 {/strlen 0 def /Lup 0 def /Ldown 0 def} def
/init  {init0 /nfrac 0 def /numearray 11 array def /denoarray 11 array def} def
/strwidth {selectfont stringwidth pop} def
/upordown {Lup Ldown ge {Lup}{Ldown} ifelse} def
/nln {strwidth strlen add /strlen exch def
 /strlen strlen upordown add def /Lup 0 def /Ldown 0 def} def
/uln {strwidth Lup   add /Lup   exch def} def
/dln {strwidth Ldown add /Ldown exch def} def
/fracstartln { /strlenorg  strlen upordown add def init0
 /nfrac nfrac 1 add def} def
/fracmidln   { /strlennume strlen upordown add def init0
 numearray nfrac strlennume put} def
/fracendln   { /strlendeno strlen upordown add def init0
 denoarray nfrac strlendeno put
 strlennume strlendeno ge {strlennume}{strlendeno} ifelse strlenorg add
 /strlen exch def } def
/cpx {currentpoint      pop} def
/cpy {currentpoint exch pop} def
/n {xup xdown ge {xup}{xdown} ifelse baseline moveto
 selectfont dup show dup length dup 0 gt
{1 sub 1 getinterval /str exch def
/d-shift str stringdepth dup downshift lt {pop downshift}if def
/u-shift str stringheight ss 3 div sub dup upshift lt {pop upshift}if def}
{pop pop /d-shift (\275) stringdepth def
/u-shift (\275) stringheight 0.9 mul def
} ifelse /xup cpx def /xdown cpx def} def
/n2 {xup xdown ge {xup}{xdown} ifelse baseline moveto
 selectfont dup show /str exch def
/d-shift str stringdepth dup downshift lt {pop downshift}if def
/u-shift str stringheight ss 3 div sub dup upshift lt {pop upshift}if def
/xup cpx def /xdown cpx def} def
/u {xup baseline u-shift add moveto
 selectfont show /xup cpx def } def
/uu {xup baseline u-shift add upshift add moveto
 selectfont show /xup cpx def } def
/ud {xup baseline u-shift add downshift 2 div sub moveto
 selectfont show /xup cpx def } def
/d {xdown baseline d-shift sub moveto
 selectfont show /xdown cpx def } def
/du {xdown baseline d-shift sub upshift add moveto
 selectfont show /xdown cpx def } def
/dd {xdown baseline d-shift sub downshift 2 div sub moveto
 selectfont show /xdown cpx def } def
/initshow {/u-shift upshift def /d-shift downshift def
 /xup cpx def /xdown cpx def /baseline cpy def} def
/numeheight {/Symbol ns selectfont (\275) dup
 stringheight exch stringdepth add 2 div} def
/denodepth numeheight def
/fracstart{/baselineorg baseline def /nfrac nfrac 1 add def
 xup xdown ge {xup}{xdown} ifelse baseline moveto /fracstartx cpx def
 /strlennume numearray nfrac get def /strlendeno denoarray nfrac get def
 strlennume strlendeno ge {strlennume}{strlendeno} ifelse 2 div
 strlennume 2 div sub numeheight rmoveto initshow} def
/fracmid{xup xdown ge {xup}{xdown} ifelse /numex exch def
 fracstartx baselineorg moveto
 strlennume strlendeno ge {strlennume}{strlendeno} ifelse 2 div
 strlendeno 2 div sub denodepth neg rmoveto initshow} def
/fracend{xup xdown ge {xup}{xdown} ifelse /denox exch def
 gsave numex denox ge {numex}{denox} ifelse dup
 baselineorg numeheight 2 div add dup
 3 1 roll stroke moveto fracstartx exch lineto
 5.0 setlinewidth [] 0 setdash stroke grestore
 baselineorg moveto initshow} def
/Left { currentpoint stroke moveto
  0 ns -3 div rmoveto initshow /nfrac 0 def} def
/Right { currentpoint stroke moveto
  /strlen strlen upordown add def
  strlen neg ns -3 div rmoveto initshow /nfrac 0 def} def
/Center { currentpoint stroke moveto
  /strlen strlen upordown add def
  strlen -2 div ns -3 div rmoveto initshow /nfrac 0 def} def
/head
{ gsave dup stringwidth pop -2 div exch stringheight 1.1 mul rmoveto
  selectfont dup dup stringwidth pop -2 div exch stringdepth
  rmoveto show grestore } def
/startline {dup 0 eq{pop /OLH (\275) stringheight 0.8 mul cpy add def
/OLstart cpx def /OvL 1 def }{1 eq{/ULH (\275) stringdepth cpy exch sub def
/ULstart cpx def /UnL 1 def }{/SLH (\326) stringheight cpy add def
/SLstart cpx def /SqL 1 def }ifelse} ifelse} def
/endline{dup 0 eq{pop OLstart OLH drawline}{1 eq{ULstart ULH drawline}
{SLstart SLH drawline}ifelse}ifelse} def
/drawline {dup gsave cpx stroke exch moveto lineto [] 0 setdash
 5.0 setlinewidth stroke grestore} def
/ISO {findfont
dup length dict begin
 {1 index /FID ne {def}{pop pop}ifelse}forall
 /Encoding ISOLatin1Encoding def
 currentdict
end
/ISOLatin1 exch definefont pop /ISOLatin1
} bind def
/ch-image {ch-data 0 get} bind def
/ch-width {ch-data 1 get} bind def
/ch-height {ch-data 2 get} bind def
/ch-xoff {ch-data 3 get} bind def
/ch-yoff {ch-data 4 get} bind def
/ch-tfmw {ch-data 5 get} bind def
/CharBuilder {
/ch-code exch def
/font-dict exch def
/ch-data font-dict /BitMaps get ch-code get def
ch-data null eq not {
ch-tfmw 0
ch-xoff neg  ch-yoff neg ch-width ch-xoff sub ch-height ch-yoff sub
setcachedevice
ch-width ch-height true [1 0  0 1  ch-xoff ch-yoff]
{ch-image} imagemask
} if
} bind def
/s3 3 string def
/D {
/ch-code exch def
/ch-data exch def
currentfont /BitMaps get ch-code ch-data put
currentfont /Encoding get ch-code
dup s3 cvs cvn put
} bind def
/fsize 105 def
/corr 0.007 def
/NewSymbol 7 dict def
/NewSymbol load begin
/FontType 3 def
/FontMatrix [corr 0 0 corr 0 0] def
/FontBBox [0 0 1 1] def
/BitMaps fsize array def
/BuildChar /CharBuilder load def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
end
/NewSymbol /NewSymbol load definefont pop
NewSymbol setfont
[<3C0000000003F00000FE000000001FFE0000FF000000003FFF0000FF800000007E07C000
  FF80000000FE03E000FF80000001FC00F000FFC0000001FC007800FFC0000003FC003800
  7FC0000003FC003C007FC0000003FC001E007FE0000003FC000E007FE0000003FE000F00
  3FE0000003FE0007003FE0000003FE0007803FF0000003FE0003803FF0000003FF000380
  1FF0000001FF0003C01FF0000001FF8001C01FF8000000FF8001C01FF8000000FF8001E0
  0FF8000000FFC000E00FF80000007FC000E00FFC0000007FC000600FFC0000007FE00000
  07FC0000003FE0000007FC0000003FE0000007FE0000003FF0000007FE0000001FF00000
  03FE0000001FF0000003FE0000001FF8000003FF0000000FF8000003FF0000000FF80000
  01FF0000000FFC000001FF00000007FC000001FF80000007FC000001FF80000007FE0000
  00FF80000003FE000000FF80000003FE000000FFC0000003FE000000FFC0000003FF0000
  007FC0000001FF0000007FC0000001FF0000007FE0000001FF0000007FE0000001FF8000
  003FE0000000FF8000003FF0000000FF8000003FF0000000FF8000003FF8000000FF8000
  001FFC000000FF8000001FFC000000FF8000001FFE0000007F8000001FFF0000007F8000
  000FFF8000007F8000000FFF800000FF8000000FFFC00000FF8000000FFDE00000FF0000
  0007FCF80000FF00000007FC7C0001FE00000007FE3E0001FE00000007FE0FC003FC0000
  0003FE07F80FF800000003FE01FFFFE000000003FF007FFF8000000003FF0007FC000000
  0001FF0000000000000001FF0000000000000001FF8000000000000001FF800000000000
  0000FF8000000000000000FF8000000000000000FFC000000000000000FFC00000000000
  00007FC0000000000000007FC0000000000000007FE0000000000000007FE00000000000
  00003FE0000000000000003FE0000000000000003FF0000000000000003FF00000000000
  0FFFFFFFFFFFF800000FFFFFFFFFFFF800000FFFFFFFFFFFF800000FFFFFFFFFFFF80000
  00000FF8000000000000000FF8000000000000000FFC000000000000000FFC0000000000
  000007FC0000000000000007FC0000000000000007FE0000000000000007FE0000000000
  000003FE0000000000000007FE000000000000000FFF0000000000000FFFFF0000000000
  001FFFFF0000000000000FFFFF0000000000000FFFFF800000000000007FFF8000000000
  0000003F0000000000>
72 101 -8 1 80.861] 104 D
[<00000FFC00000000FFFFC0000003FFFFF000000FF803FC00001FE0003F00007F80000FC0
  00FF000003C001FE000001C003FC0000000007FC0000000007F8000000000FF000000000
  0FF0000000001FF0000000001FE0000000003FE0000000003FE0000000003FE000000000
  7FE0000000007FE0000000007FC0000000007FC0000000007FE0000000007FE000000000
  FFE000000000FFE000000000FFE000000000FFE0000000007FE0000000007FE000000000
  7FF0000000007FF0000000007FF0000000007FF0000000007FFFFFFFFE003FFFFFFFFF00
  3FFFFFFFFF003FFFFFFFFC003FFC000000001FFC000000001FFC000000000FFE00000000
  0FFE0000000007FE0000000007FF0000000003FF0000000003FF8000000001FF80000000
  00FFC0000000007FE0000000003FE0000000001FF0000000000FF80000000007FC000000
  0003FE0000000001FF80000000007FC0000000003FF8000000000FFF0000000003FFFFF8
  000000FFFFFC0000001FFFFC00000001FFF8>
48 63 -6 1 56.719] 15 D
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica-Gothic) findfont 200 scalefont setfont
1.000 UL
LTb
1140 600 M
63 0 V
5657 0 R
-63 0 V
-5777 0 R
(-2000) Rshow
1140 1125 M
63 0 V
5657 0 R
-63 0 V
-5777 0 R
(-1500) Rshow
1140 1650 M
63 0 V
5657 0 R
-63 0 V
-5777 0 R
(-1000) Rshow
1140 2175 M
63 0 V
5657 0 R
-63 0 V
-5777 0 R
(-500) Rshow
1140 2700 M
63 0 V
5657 0 R
-63 0 V
-5777 0 R
(0) Rshow
1140 3225 M
63 0 V
5657 0 R
-63 0 V
-5777 0 R
(500) Rshow
1140 3750 M
63 0 V
5657 0 R
-63 0 V
-5777 0 R
(1000) Rshow
1140 4275 M
63 0 V
5657 0 R
-63 0 V
-5777 0 R
(1500) Rshow
1140 4800 M
63 0 V
5657 0 R
-63 0 V
-5777 0 R
(2000) Rshow
1140 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
(-0.1) Cshow
2570 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
(-0.05) Cshow
4000 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
(0) Cshow
5430 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
(0.05) Cshow
6860 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
(0.1) Cshow
1.000 UL
LTa
1140 2700 M
5720 0 V
1.000 UL
LTa
4000 600 M
0 4200 V
1.000 UL
LTb
1140 600 M
5720 0 V
0 4200 V
-5720 0 V
0 -4200 V
200 2700 M
currentpoint gsave translate 90 rotate 0 0 M
(load \(kgf\)) Cshow
grestore
4000 100 M
(story deformation angle \(rad\)) Cshow
1.000 UP
1.000 UL
LT0
1260 4577 M
(No.1) Lshow
1860 4577 M
543 0 V
1140 2305 M
953 114 V
954 137 V
476 84 V
239 34 V
119 10 V
59 8 V
60 8 V
60 21 V
59 8 V
119 16 V
239 36 V
476 74 V
954 115 V
953 98 V
1140 2305 Pls
2093 2419 Pls
3047 2556 Pls
3523 2640 Pls
3762 2674 Pls
3881 2684 Pls
3940 2692 Pls
4000 2700 Pls
4060 2721 Pls
4119 2729 Pls
4238 2745 Pls
4477 2781 Pls
4953 2855 Pls
5907 2970 Pls
6860 3068 Pls
2131 4577 Pls
1.000 UP
1.000 UL
LT1
1260 4257 M
(No.3) Lshow
1860 4257 M
543 0 V
1140 2095 M
953 13 V
954 50 V
476 105 V
239 103 V
119 90 V
59 81 V
60 163 V
60 158 V
59 99 V
119 111 V
239 127 V
476 133 V
954 58 V
953 -76 V
1140 2095 Crs
2093 2108 Crs
3047 2158 Crs
3523 2263 Crs
3762 2366 Crs
3881 2456 Crs
3940 2537 Crs
4000 2700 Crs
4060 2858 Crs
4119 2957 Crs
4238 3068 Crs
4477 3195 Crs
4953 3328 Crs
5907 3386 Crs
6860 3310 Crs
2131 4257 Crs
1.000 UP
1.000 UL
LT2
1260 3937 M
(No.4) Lshow
1860 3937 M
543 0 V
1140 1935 M
953 -163 V
954 -192 V
476 -239 V
239 157 V
119 403 V
59 323 V
60 476 V
60 376 V
59 218 V
119 397 V
239 410 V
476 -134 V
954 -210 V
953 -276 V
1140 1935 Star
2093 1772 Star
3047 1580 Star
3523 1341 Star
3762 1498 Star
3881 1901 Star
3940 2224 Star
4000 2700 Star
4060 3076 Star
4119 3294 Star
4238 3691 Star
4477 4101 Star
4953 3967 Star
5907 3757 Star
6860 3481 Star
2131 3937 Star
1.000 UP
1.000 UL
LT3
1260 3617 M
(No.5) Lshow
1860 3617 M
543 0 V
1140 2247 M
953 154 V
925 157 V
29 -799 V
476 68 V
239 294 V
119 242 V
59 153 V
60 184 V
60 152 V
59 129 V
119 221 V
239 -116 V
476 11 V
954 -47 V
953 45 V
1140 2247 Box
2093 2401 Box
3018 2558 Box
3047 1759 Box
3523 1827 Box
3762 2121 Box
3881 2363 Box
3940 2516 Box
4000 2700 Box
4060 2852 Box
4119 2981 Box
4238 3202 Box
4477 3086 Box
4953 3097 Box
5907 3050 Box
6860 3095 Box
2131 3617 Box
1.000 UP
1.000 UL
LT4
1260 3297 M
(No.6) Lshow
1860 3297 M
543 0 V
1140 1990 M
953 13 V
925 202 V
29 -885 V
476 155 V
239 371 V
119 341 V
59 222 V
60 291 V
60 300 V
59 124 V
119 183 V
239 137 V
476 147 V
954 0 V
953 -173 V
1140 1990 BoxF
2093 2003 BoxF
3018 2205 BoxF
3047 1320 BoxF
3523 1475 BoxF
3762 1846 BoxF
3881 2187 BoxF
3940 2409 BoxF
4000 2700 BoxF
4060 3000 BoxF
4119 3124 BoxF
4238 3307 BoxF
4477 3444 BoxF
4953 3591 BoxF
5907 3591 BoxF
6860 3418 BoxF
2131 3297 BoxF
1.000 UP
1.000 UL
LT5
1260 2977 M
(No.7) Lshow
1860 2977 M
543 0 V
1140 2014 M
953 -71 V
925 73 V
3047 739 L
476 94 V
239 550 V
119 500 V
59 328 V
60 489 V
60 502 V
59 355 V
119 413 V
239 394 V
476 -24 V
954 -544 V
953 -384 V
1140 2014 Circle
2093 1943 Circle
3018 2016 Circle
3047 739 Circle
3523 833 Circle
3762 1383 Circle
3881 1883 Circle
3940 2211 Circle
4000 2700 Circle
4060 3202 Circle
4119 3557 Circle
4238 3970 Circle
4477 4364 Circle
4953 4340 Circle
5907 3796 Circle
6860 3412 Circle
2131 2977 Circle
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica-Gothic
